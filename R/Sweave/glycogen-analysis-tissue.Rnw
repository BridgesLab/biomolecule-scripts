\documentclass{article}

\usepackage{fullpage}
\usepackage[colorlinks=true]{hyperref}
\usepackage[tableposition=top]{caption}
\usepackage[utf8]{inputenc}

\begin{document}

\title{Sample Analysis of Glycogen Determination from Tissues}
\author{The Author}
\date{The Date}
\maketitle

<<data-input, echo=FALSE>>=
working_directory <- 'some location'
setwd(working_directory)
data_file <- "raw_glycogen_data.csv" #columns include Volume, Weight, A505 and Treatment or Genotype
data <- read.csv(data_file)
#std_curve_file <- "std_curve.csv" #columns Glucose, A505
#std_curve <- read.csv(std_curve_file)
#uncomment the previous two lines and comment the next two if entering std curve data from a file
std_curve <- data.frame(Glucose = c(0,0.2,0.4,0.6,0.8,1.0), A505=c(0,140,269,360,471,561)) 
@

The data is saved in \Sexpr{working_directory}.

<<std-curve-analysis, echo=TRUE>>=
glucose.mwt <- 180.15588 #g/mol not used unless wanting to convert to molar
std_fit <- lm(Glucose~A505 -1, data=std_curve) #force through intercept
summary(std_fit)
@

<<label=std-curve, include=FALSE, echo=FALSE>>=
plot(Glucose~A505, data=std_curve,
     ylab="Glucose (ug)")
abline(std_fit)
@

\begin{figure}
\begin{center}
<<label=std-curve,fig=TRUE,echo=FALSE>>=
<<std-curve>>
@
\end{center}
\caption{Standard Curve for Glucose Assay.}
\label{fig:one}
\end{figure}


<<data-analysis, echo=TRUE>>=
data$Glycogen <- data$A505*coefficients(std_fit) #in ug/assay
assay.volume <- 100 #uL
data$total.glycogen <- data$Glycogen*200/assay.volume #in ug
data$normalized.glycogen <- data$total.glycogen/data$Weight*1000 # in ug/g
calculated.data <- data.frame(Mouse = data$Mouse, 
                              Treatment = data$Treatment,
                              Glycogen = data$normalized.glycogen,
                              check.rows=F)
result.t.test <- t.test(Glycogen~Treatment, data=calculated.data) #for single comparason
#result.t.test <- with(calculated.data, pairwise.t.test(Glycogen,Treatment)) for multiple comparasons
print(result.t.test) 
@

<<label=data-tables,echo=FALSE,results=tex>>=
require(xtable)
print(xtable(calculated.data[order(calculated.data$Treatment),], caption = "Calculated Data", label = "tab:one"), include.rownames=F)
@

<<data-summary, echo=FALSE>>=
require(reshape)
summary <- as.matrix(cast(calculated.data, ~Treatment, value="Glycogen", fun.aggregate=mean))
se <- function(x) sd(x, na.rm=T)/sqrt(length(x))
error.se <- as.matrix(cast(calculated.data, ~Treatment, value="Glycogen", fun.aggregate=se))
@

<<label=summary-tables,echo=FALSE,results=tex>>=
print(xtable(rbind(Mean=summary, SE=error.se), caption = "Summarized Data", label = "tab:two"))
@

<<label=barplot, include=FALSE, echo=FALSE>>=
ymax <- max(summary)+max(error.se)
plot <- barplot(summary,
        ylab="Glycogen Levels (ug/g)",
        ylim = c(0,ymax))
superpose.eb <- function (x, y, ebl, ebu = ebl, length = 0.08, ...)
  arrows(x, y + ebu, x, y - ebl, angle = 90, code = 3,
  length = length, ...)
superpose.eb(plot, summary, error.se)
@


\begin{figure}
\begin{center}
<<label=barplot,fig=TRUE,echo=FALSE>>=
<<barplot>>
@
\end{center}
\caption{Summary of Glycogen Levels.}
\label{fig:two}
\end{figure}

<<label=boxplot, include=FALSE, echo=FALSE>>=
plot <- boxplot(calculated.data$Glycogen~calculated.data$Treatment,
        ylab="Glycogen Levels (ug/g)",
        ylim = c(0,max(calculated.data$Glycogen)))
@


\begin{figure}
\begin{center}
<<label=boxplot,fig=TRUE,echo=FALSE>>=
<<boxplot>>
@
\end{center}
\caption{Summary of Glycogen Levels.}
\label{fig:three}
\end{figure}

\section*{Session Information}
<<sessionInfo, results=tex, echo=F>>=
toLatex(sessionInfo())
@


\end{document}